# Unique name for this workflow
name: Validate Released Package Version Compatibility

# Definition when the workflow should run
on:
  push:
    branches:
      - master
    paths:
      - '.github/workflows/scheduled-validate-released-package-version-compatibility.yml'
  schedule:
    - cron:  '0 */3 * * *'

# Jobs to be executed
jobs:
  validate-released-package-version-compatibility:
    runs-on: ubuntu-latest
    steps:
      # Install Salesforce CLI
      - name: Install Salesforce CLI
        run: |
          wget https://developer.salesforce.com/media/salesforce-cli/sfdx-linux-amd64.tar.xz
          mkdir sfdx-cli
          tar xJf sfdx-linux-amd64.tar.xz -C sfdx-cli --strip-components 1
          ./sfdx-cli/install

      # Checkout the code in the pull request
      - name: Checkout source code
        uses: actions/checkout@v2

      # Store secret for dev hub
      - name: Populate auth file with PROD_SFDX_URL secret
        shell: bash
        run: echo ${{ secrets.PROD_SFDX_URL}} > ./PROD_SFDX_URL.txt

      # Authenticate dev hub
      - name: Authenticate Dev Hub
        run: sfdx force:auth:sfdxurl:store -f ./PROD_SFDX_URL.txt -a devhub -d

      # Create scratch org
      - name: Create scratch org
        run: sfdx force:org:create -f config/project-scratch-def.json -a scratch-org -s -d 1

      # Query and install the latest package versions ordered by the correct order of installation
      - name: Install released package versions
        id: install-released-package-versions
        shell: bash
        run: |
          error=$(bash scripts/shell/install_all_released_package_versions.sh ${{secrets.PACKAGE_KEY}})
          echo "::set-output name=error::$error"
          if [[ -n $error ]]; then echo $error; exit 1; fi

      - name: Notify slack
        if: failure()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: pullreminders/slack-action@master
        with:
          args: '{\"channel\":\"C012KBWG4SC\",\"text\":\" @channel Released package version compatibility check failed:\n *Error:*  ${{steps.install-released-package-versions.outputs.error}}  \"}'

      # Debug
      - name: Debug
        if: always()
        run: |
          echo ${{steps.install-released-package-versions.outputs.error}}

      # Housekeeping
      - name: Delete scratch org
        if: always()
        run: sfdx force:org:delete -p -u scratch-org