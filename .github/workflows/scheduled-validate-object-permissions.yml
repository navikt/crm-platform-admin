# Unique name for this workflow
name: Validate Object Permissions

# Definition when the workflow should run
on:
  push:
    branches:
      - master
    paths:
      - '.github/workflows/scheduled-validate-object-permissions.yml'
  schedule:
    - cron:  '0 8 * * *'

# Jobs to be executed
jobs:
  validate-object-permissions:
    runs-on: ubuntu-latest
    steps:
      # Install Salesforce CLI
      - name: Install Salesforce CLI
        run: |
          wget https://developer.salesforce.com/media/salesforce-cli/sfdx-linux-amd64.tar.xz
          mkdir sfdx-cli
          tar xJf sfdx-linux-amd64.tar.xz -C sfdx-cli --strip-components 1
          ./sfdx-cli/install

      # Store secret for production environment
      - name: Populate auth file with PROD_SFDX_URL secret
        shell: bash
        run: echo ${{ secrets.PROD_SFDX_URL}} > ./PROD_SFDX_URL.txt

      # Authenticate production environment
      - name: Authenticate Dev Hub
        run: sfdx force:auth:sfdxurl:store -f ./PROD_SFDX_URL.txt -a prod -d

      # Store secret for preprod envirnment
      - name: Populate auth file with PROD_SFDX_URL secret
        shell: bash
        run: echo ${{ secrets.PREPROD_SFDX_URL}} > ./PREPROD_SFDX_URL.txt

      # Authenticate preprod environment
      - name: Authenticate Dev Hub
        run: sfdx force:auth:sfdxurl:store -f ./PREPROD_SFDX_URL.txt -a preprod -d

      # Run test object permission test in production
      - name: Run Object Permission Test (Production)
        id: test-run-production
        run: |
          read statusCode errorMessage < <(echo $(sfdx force:apex:test:run -n "ObjectPermissionFromPermissionSetTest" -u prod -w 10 --json | jq -r '.status, .result.tests[0].Message'))
          echo "::set-output name=statusCode::$statusCode"
          echo "::set-output name=errorMessage::$errorMessage"

      # Notify slack if test fails in production
      - name: Notify slack (Production test fail)
        if: steps.test-run-production.outputs.statusCode != '0'
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: pullreminders/slack-action@master
        with:
          args: '{\"channel\":\"C012KBWG4SC\",\"text\":\" @channel *Permission Set Object Permission Check Failed (PRODUCTION)*\n ${{steps.test-run-production.outputs.errorMessage}} \"}'

      # Run test object permission test in preprod
      - name: Run Object Permission Test (Preprod)
        id: test-run-preprod
        run: |
          read statusCode errorMessage < <(echo $(sfdx force:apex:test:run -n "ObjectPermissionFromPermissionSetTest" -u preprod -w 10 --json | jq -r '.status, .result.tests[0].Message'))
          echo "::set-output name=statusCode::$statusCode"
          echo "::set-output name=errorMessage::$errorMessage"

      # Notify slack if test fails in preprod
      - name: Notify slack (Production test fail)
        if: steps.test-run-preprod.outputs.statusCode != '0'
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: pullreminders/slack-action@master
        with:
          args: '{\"channel\":\"C012KBWG4SC\",\"text\":\" @channel *Permission Set Object Permission Check Failed (PREPROD)*\n ${{steps.test-run-preprod.outputs.errorMessage}} \"}'
